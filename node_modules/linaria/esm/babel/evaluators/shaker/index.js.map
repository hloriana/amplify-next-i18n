{"version":3,"sources":["../../../../src/babel/evaluators/shaker/index.ts"],"names":["generator","transformSync","debug","buildOptions","shake","prepareForShake","filename","options","code","transformOptions","ast","presets","unshift","targets","include","require","resolve","plugins","useESModules","JSON","stringify","transformed","Error","program","shaker","text","only","shaken","imports","shakenCode"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAGA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,SAASC,eAAT,CACEC,QADF,EAEEC,OAFF,EAGEC,IAHF,EAIW;AACT,QAAMC,gBAAgB,GAAGN,YAAY,CAACG,QAAD,EAAWC,OAAX,CAArC;AAEAE,EAAAA,gBAAgB,CAACC,GAAjB,GAAuB,IAAvB;AACAD,EAAAA,gBAAgB,CAACE,OAAjB,CAA0BC,OAA1B,CAAkC,CAChC,mBADgC,EAEhC;AACEC,IAAAA,OAAO,EAAE,OADX;AAEE;AACAC,IAAAA,OAAO,EAAE,CAAC,2CAAD;AAHX,GAFgC,CAAlC;AAQAL,EAAAA,gBAAgB,CAACE,OAAjB,CAA0BC,OAA1B,CAAkC,CAACG,OAAO,CAACC,OAAR,CAAgB,YAAhB,CAAD,EAAgCT,OAAhC,CAAlC;AACAE,EAAAA,gBAAgB,CAACQ,OAAjB,CAA0BL,OAA1B,CAAkC,mCAAlC;AACAH,EAAAA,gBAAgB,CAACQ,OAAjB,CAA0BL,OAA1B,CAAkC,CAChC,iCADgC,EAEhC;AAAEM,IAAAA,YAAY,EAAE;AAAhB,GAFgC,CAAlC;AAKAhB,EAAAA,KAAK,CACH,4BADG,EAEF,aAAYI,QAAS,iBAAgBa,IAAI,CAACC,SAAL,CACpCX,gBADoC,EAEpC,IAFoC,EAGpC,CAHoC,CAIpC,EANC,CAAL;AAQA,QAAMY,WAAW,GAAGpB,aAAa,CAACO,IAAD,EAAOC,gBAAP,CAAjC;;AAEA,MAAIY,WAAW,KAAK,IAAhB,IAAwB,CAACA,WAAW,CAACX,GAAzC,EAA8C;AAC5C,UAAM,IAAIY,KAAJ,CAAW,GAAEhB,QAAS,wBAAtB,CAAN;AACD;;AAED,SAAOe,WAAW,CAACX,GAAZ,CAAgBa,OAAvB;AACD;;AAED,MAAMC,MAAiB,GAAG,CAAClB,QAAD,EAAWC,OAAX,EAAoBkB,IAApB,EAA0BC,IAAI,GAAG,IAAjC,KAA0C;AAClE,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBxB,KAAK,CAC7BC,eAAe,CAACC,QAAD,EAAWC,OAAX,EAAoBkB,IAApB,CADc,EAE7BC,IAF6B,CAA/B;AAKAxB,EAAAA,KAAK,CAAC,2BAAD,EAA+B,+BAA8BI,QAAS,EAAtE,CAAL;AACA,QAAM;AAAEE,IAAAA,IAAI,EAAEqB;AAAR,MAAuB7B,SAAS,CAAC2B,MAAD,CAAtC;AACA,SAAO,CAACE,UAAD,EAAaD,OAAb,CAAP;AACD,CATD;;AAWA,eAAeJ,MAAf","sourcesContent":["import generator from '@babel/generator';\nimport { transformSync } from '@babel/core';\nimport type { Program } from '@babel/types';\nimport type { Evaluator, StrictOptions } from '../../types';\nimport { debug } from '../../utils/logger';\nimport buildOptions from '../buildOptions';\nimport shake from './shaker';\n\nfunction prepareForShake(\n  filename: string,\n  options: StrictOptions,\n  code: string\n): Program {\n  const transformOptions = buildOptions(filename, options);\n\n  transformOptions.ast = true;\n  transformOptions.presets!.unshift([\n    '@babel/preset-env',\n    {\n      targets: 'ie 11',\n      // we need this plugin so we list it explicitly, explanation in `evaluators/extractor/index`\n      include: ['@babel/plugin-transform-template-literals'],\n    },\n  ]);\n  transformOptions.presets!.unshift([require.resolve('../preeval'), options]);\n  transformOptions.plugins!.unshift('transform-react-remove-prop-types');\n  transformOptions.plugins!.unshift([\n    '@babel/plugin-transform-runtime',\n    { useESModules: false },\n  ]);\n\n  debug(\n    'evaluator:shaker:transform',\n    `Transform ${filename} with options ${JSON.stringify(\n      transformOptions,\n      null,\n      2\n    )}`\n  );\n  const transformed = transformSync(code, transformOptions);\n\n  if (transformed === null || !transformed.ast) {\n    throw new Error(`${filename} cannot be transformed`);\n  }\n\n  return transformed.ast.program;\n}\n\nconst shaker: Evaluator = (filename, options, text, only = null) => {\n  const [shaken, imports] = shake(\n    prepareForShake(filename, options, text),\n    only\n  );\n\n  debug('evaluator:shaker:generate', `Generate shaken source code ${filename}`);\n  const { code: shakenCode } = generator(shaken!);\n  return [shakenCode, imports];\n};\n\nexport default shaker;\n"],"file":"index.js"}