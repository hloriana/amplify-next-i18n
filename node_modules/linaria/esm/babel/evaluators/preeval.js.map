{"version":3,"sources":["../../../src/babel/evaluators/preeval.ts"],"names":["GenerateClassNames","DetectStyledImportName","JSXElement","ProcessStyled","ProcessCSS","preeval","babel","options","visitor","Program","enter","path","state","queue","rules","index","dependencies","replacements","traverse","ImportDeclaration","p","TaggedTemplateExpression","CallExpression","preset","context","plugins"],"mappings":"AAAA;;;;AAMA,OAAOA,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,sBAAP,MAAmC,oCAAnC;AAGA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAA8BC,OAA9B,EAAsD;AACpD,SAAO;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,CAACC,IAAD,EAA0BC,KAA1B,EAAwC;AAC3C;AACAA,UAAAA,KAAK,CAACC,KAAN,GAAc,EAAd;AACAD,UAAAA,KAAK,CAACE,KAAN,GAAc,EAAd;AACAF,UAAAA,KAAK,CAACG,KAAN,GAAc,CAAC,CAAf;AACAH,UAAAA,KAAK,CAACI,YAAN,GAAqB,EAArB;AACAJ,UAAAA,KAAK,CAACK,YAAN,GAAqB,EAArB,CAN2C,CAQ3C;AACA;;AACAN,UAAAA,IAAI,CAACO,QAAL,CAAc;AACZC,YAAAA,iBAAiB,EAAGC,CAAD,IAAOnB,sBAAsB,CAACK,KAAD,EAAQc,CAAR,EAAWR,KAAX,CADpC;AAEZS,YAAAA,wBAAwB,EAAGD,CAAD,IACxBpB,kBAAkB,CAACM,KAAD,EAAQc,CAAR,EAAWR,KAAX,EAAkBL,OAAlB,CAHR;AAIZL,YAAAA;AAJY,WAAd;AAMD;;AAjBM,OADF;AAoBPoB,MAAAA,cAAc,EAAEnB,aApBT;AAqBPkB,MAAAA,wBAAwB,EAAEjB,UArBnB,CAqB+B;;AArB/B;AADJ,GAAP;AAyBD;;AAED,eAAe,SAASmB,MAAT,CAAgBC,OAAhB,EAA8BjB,OAA9B,EAAsD;AACnE,SAAO;AACLkB,IAAAA,OAAO,EAAE,CAAC,CAACpB,OAAD,EAAUE,OAAV,CAAD;AADJ,GAAP;AAGD","sourcesContent":["/**\n * This file is a babel preset used to transform files inside evaluators.\n * It works the same as main `babel/extract` preset, but do not evaluate lazy dependencies.\n */\nimport type { NodePath } from '@babel/traverse';\nimport type { Program } from '@babel/types';\nimport GenerateClassNames from '../visitors/GenerateClassNames';\nimport DetectStyledImportName from '../visitors/DetectStyledImportName';\nimport type { State, StrictOptions } from '../types';\nimport { Core } from '../babel';\nimport JSXElement from './visitors/JSXElement';\nimport ProcessStyled from './visitors/ProcessStyled';\nimport ProcessCSS from './visitors/ProcessCSS';\n\nfunction preeval(babel: Core, options: StrictOptions) {\n  return {\n    visitor: {\n      Program: {\n        enter(path: NodePath<Program>, state: State) {\n          // Collect all the style rules from the styles we encounter\n          state.queue = [];\n          state.rules = {};\n          state.index = -1;\n          state.dependencies = [];\n          state.replacements = [];\n\n          // We need our transforms to run before anything else\n          // So we traverse here instead of a in a visitor\n          path.traverse({\n            ImportDeclaration: (p) => DetectStyledImportName(babel, p, state),\n            TaggedTemplateExpression: (p) =>\n              GenerateClassNames(babel, p, state, options),\n            JSXElement,\n          });\n        },\n      },\n      CallExpression: ProcessStyled,\n      TaggedTemplateExpression: ProcessCSS, // TaggedTemplateExpression is processed before CallExpression\n    },\n  };\n}\n\nexport default function preset(context: any, options: StrictOptions) {\n  return {\n    plugins: [[preeval, options]],\n  };\n}\n"],"file":"preeval.js"}