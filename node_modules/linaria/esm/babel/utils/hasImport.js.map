{"version":3,"sources":["../../../src/babel/utils/hasImport.ts"],"names":["dirname","Module","hasImport","t","scope","filename","identifier","source","binding","getAllBindings","p","path","resolveFromFile","id","_resolveFilename","paths","_nodeModulePaths","e","isImportingModule","value","require","resolve","isImportSpecifier","isImportDeclaration","parentPath","node","isVariableDeclarator","isCallExpression","init","isIdentifier","callee","name","arguments","length","isStringLiteral","isTemplateLiteral","quasis","cooked"],"mappings":"AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;AACA,eAAe,SAASC,SAAT,CACbC,CADa,EAEbC,KAFa,EAGbC,QAHa,EAIbC,UAJa,EAKbC,MALa,EAMJ;AACT,QAAMC,OAAO,GAAGJ,KAAK,CAACK,cAAN,GAAuBH,UAAvB,CAAhB;;AAEA,MAAI,CAACE,OAAL,EAAc;AACZ,WAAO,KAAP;AACD;;AAED,QAAME,CAAC,GAAGF,OAAO,CAACG,IAAlB;;AAEA,QAAMC,eAAe,GAAIC,EAAD,IAAgB;AACtC,QAAI;AACF,aAAOZ,MAAM,CAACa,gBAAP,CAAwBD,EAAxB,EAA4B;AACjCA,QAAAA,EAAE,EAAER,QAD6B;AAEjCA,QAAAA,QAFiC;AAGjCU,QAAAA,KAAK,EAAEd,MAAM,CAACe,gBAAP,CAAwBhB,OAAO,CAACK,QAAD,CAA/B;AAH0B,OAA5B,CAAP;AAKD,KAND,CAME,OAAOY,CAAP,EAAU;AACV,aAAO,IAAP;AACD;AACF,GAVD;;AAYA,QAAMC,iBAAiB,GAAIC,KAAD,IACxB;AACAA,EAAAA,KAAK,KAAKZ,MAAV,IACA;AACAK,EAAAA,eAAe,CAACO,KAAD,CAAf,OACE;AACCZ,EAAAA,MAAM,KAAK,SAAX,GACGa,OAAO,CAACC,OAAR,CAAgB,aAAhB,CADH,GAEGd,MAAM,KAAK,eAAX,GACAa,OAAO,CAACC,OAAR,CAAgB,cAAhB,CADA,GAEAT,eAAe,CAACL,MAAD,CANrB,CAJF;;AAYA,MAAIJ,CAAC,CAACmB,iBAAF,CAAoBZ,CAApB,KAA0BP,CAAC,CAACoB,mBAAF,CAAsBb,CAAC,CAACc,UAAxB,CAA9B,EAAmE;AACjE,WAAON,iBAAiB,CAACR,CAAC,CAACc,UAAF,CAAaC,IAAb,CAAkBlB,MAAlB,CAAyBY,KAA1B,CAAxB;AACD;;AAED,MAAIhB,CAAC,CAACuB,oBAAF,CAAuBhB,CAAvB,CAAJ,EAA+B;AAC7B,QACEP,CAAC,CAACwB,gBAAF,CAAmBjB,CAAC,CAACe,IAAF,CAAOG,IAA1B,KACAzB,CAAC,CAAC0B,YAAF,CAAenB,CAAC,CAACe,IAAF,CAAOG,IAAP,CAAYE,MAA3B,CADA,IAEApB,CAAC,CAACe,IAAF,CAAOG,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,KAA4B,SAF5B,IAGArB,CAAC,CAACe,IAAF,CAAOG,IAAP,CAAYI,SAAZ,CAAsBC,MAAtB,KAAiC,CAJnC,EAKE;AACA,YAAMR,IAAI,GAAGf,CAAC,CAACe,IAAF,CAAOG,IAAP,CAAYI,SAAZ,CAAsB,CAAtB,CAAb;;AAEA,UAAI7B,CAAC,CAAC+B,eAAF,CAAkBT,IAAlB,CAAJ,EAA6B;AAC3B,eAAOP,iBAAiB,CAACO,IAAI,CAACN,KAAN,CAAxB;AACD;;AAED,UAAIhB,CAAC,CAACgC,iBAAF,CAAoBV,IAApB,KAA6BA,IAAI,CAACW,MAAL,CAAYH,MAAZ,KAAuB,CAAxD,EAA2D;AACzD,eAAOf,iBAAiB,CAACO,IAAI,CAACW,MAAL,CAAY,CAAZ,EAAejB,KAAf,CAAqBkB,MAAtB,CAAxB;AACD;AACF;AACF;;AAED,SAAO,KAAP;AACD","sourcesContent":["import { dirname } from 'path';\nimport Module from '../module';\n\n// Verify if the binding is imported from the specified source\nexport default function hasImport(\n  t: any,\n  scope: any,\n  filename: string,\n  identifier: string,\n  source: string\n): boolean {\n  const binding = scope.getAllBindings()[identifier];\n\n  if (!binding) {\n    return false;\n  }\n\n  const p = binding.path;\n\n  const resolveFromFile = (id: string) => {\n    try {\n      return Module._resolveFilename(id, {\n        id: filename,\n        filename,\n        paths: Module._nodeModulePaths(dirname(filename)),\n      });\n    } catch (e) {\n      return null;\n    }\n  };\n\n  const isImportingModule = (value: string) =>\n    // If the value is an exact match, assume it imports the module\n    value === source ||\n    // Otherwise try to resolve both and check if they are the same file\n    resolveFromFile(value) ===\n      // eslint-disable-next-line no-nested-ternary\n      (source === 'linaria'\n        ? require.resolve('../../index')\n        : source === 'linaria/react'\n        ? require.resolve('../../react/')\n        : resolveFromFile(source));\n\n  if (t.isImportSpecifier(p) && t.isImportDeclaration(p.parentPath)) {\n    return isImportingModule(p.parentPath.node.source.value);\n  }\n\n  if (t.isVariableDeclarator(p)) {\n    if (\n      t.isCallExpression(p.node.init) &&\n      t.isIdentifier(p.node.init.callee) &&\n      p.node.init.callee.name === 'require' &&\n      p.node.init.arguments.length === 1\n    ) {\n      const node = p.node.init.arguments[0];\n\n      if (t.isStringLiteral(node)) {\n        return isImportingModule(node.value);\n      }\n\n      if (t.isTemplateLiteral(node) && node.quasis.length === 1) {\n        return isImportingModule(node.quasis[0].value.cooked);\n      }\n    }\n  }\n\n  return false;\n}\n"],"file":"hasImport.js"}