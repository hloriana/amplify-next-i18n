"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PLUGIN_LISTENER_NAME = void 0;
var js_cookie_1 = __importDefault(require("js-cookie"));
var extend_1 = __importDefault(require("extend"));
var misc_1 = require("../utils/misc");
var debounce_1 = __importDefault(require("debounce"));
exports.PLUGIN_LISTENER_NAME = 'Forms API Tracking';
var FORM_VIEW = 'form.load.auto.dataLayer.load';
var FORM_NEXT_STEP = 'form.interact.manual.click.next-step';
var FORM_PREVIOUS_STEP = 'form.interact.manual.click.previous-step';
var FORM_SUMBIT = 'form.interact.manual.click.formSubmit';
var FORM_SUCCESS = 'form.interact.auto.success.formSuccess';
var FORM_SUBMIT_ERROR = 'form.interact.auto.error.formError';
var FIELD_VALIDATION_ERROR = 'field.interact.auto.error';
var FIELD_INTERACTED = 'form.interact.manual.click.formField';
var FIELD_BROCHUREVARIANT_CHANGE = 'field.brochure.variant.change';
var computeTrackingData = function (trackingData) {
    var trackingObj = {};
    if (trackingData) {
        var trackingDataBits = trackingData.split('|');
        for (var i = 0; i < trackingDataBits.length; i += 1) {
            var trackingEntryBits = trackingDataBits[i].split(':');
            var _a = __read(trackingEntryBits, 2), key = _a[0], value = _a[1];
            trackingObj[key] = value;
        }
    }
    return trackingObj;
};
var getHappenedEvents = function () {
    var pageViewArray = [];
    for (var i = 0; i < window.dl.events.length; i++) {
        var currentEventObj = window.dl.events[i];
        if (currentEventObj && currentEventObj.event) {
            pageViewArray.push(currentEventObj.event);
        }
    }
    return pageViewArray;
};
function triggerPrevStep() {
    if (window.dl && window.dl.form) {
        var currform = {
            id: window.dl.form.id,
            type: window.dl.form.type,
            thank_you_path: window.dl.form.thank_you_path
        };
        window.dl.events.pushWithEvent({ "event": FORM_PREVIOUS_STEP, "form": currform });
    }
}
function triggerNextStep() {
    if (window.dl && window.dl.form) {
        var currform = {
            id: window.dl.form.id,
            type: window.dl.form.type,
            thank_you_path: window.dl.form.thank_you_path
        };
        window.dl.events.pushWithEvent({ "event": FORM_NEXT_STEP, "form": currform });
    }
}
function getFormTrackingData() {
    var _a, _b;
    var trackingDetails = {
        externalReferringUrl: js_cookie_1.default.get('OriginalReferringURl'),
        entryPage: js_cookie_1.default.get('OriginalEntryUrl'),
        referringUrl: document.referrer,
        formUrl: window.location.href,
        deviceType: misc_1.isMobile() ? 'Mobile' : 'Desktop',
        tritonId: js_cookie_1.default.get('triton') || 0,
        tritonPageViewId: js_cookie_1.default.get('pageview') || 0,
        tritonVisitId: '',
    };
    var tritonVisitId = js_cookie_1.default.get('tts');
    if (tritonVisitId) {
        var tritonVisitIdBits = tritonVisitId.split('&');
        var tritonVisitValues = tritonVisitIdBits[0].split('=');
        trackingDetails.tritonVisitId = tritonVisitValues[1] || '0';
    }
    var trackingObj = computeTrackingData(js_cookie_1.default.get('TrackingData'));
    extend_1.default(trackingDetails, trackingObj);
    trackingDetails.EntrySourceCode = trackingDetails.SourceCode || '';
    trackingDetails.RawEtag = trackingDetails.RawSourceEtag || '';
    trackingDetails.PartnerCode =
        typeof trackingDetails.PartnerName !== 'string' || trackingDetails.PartnerName.toLowerCase() === 'unknown' ? '' : trackingDetails.PartnerName;
    trackingDetails.Keywords = trackingDetails.Keyword || '';
    trackingDetails.GoogleClickID = (_b = (_a = window.dl) === null || _a === void 0 ? void 0 : _a.channel) === null || _b === void 0 ? void 0 : _b.gclid;
    return trackingDetails;
}
;
function triggerFieldInteractionEvent() {
    if (window.dl && window.dl.form) {
        var currfield = this;
        var curr_field = {
            id: currfield.id,
            form_id: window.dl.form.type,
            form_target: window.dl.form.thank_you_path
        };
        if (currfield.name === 'deliveryPreference') {
            window.dl.events.pushWithEvent({ "event": FIELD_BROCHUREVARIANT_CHANGE, "field": curr_field });
        }
        else {
            if (currfield.type === 'text') {
                if (currfield.value !== '') {
                   // window.dl.events.pushWithEvent({ "event": FIELD_INTERACTED, "field": curr_field });
                }
            }
            else {
                //window.dl.events.pushWithEvent({ "event": FIELD_INTERACTED, "field": curr_field });
                var eventslog = getHappenedEvents();
                if (eventslog[eventslog.length - 2] === FORM_VIEW) {
                    window.dl.user.form_activity = window.dl.user.form_activity || {};
                    window.dl.user.form_activity.form_start_count = window.dl.user.form_activity.form_start_count || 0;
                    window.dl.user.form_activity.form_start_count = window.dl.user.form_activity.form_start_count + 1;
                    window.dl.utility.setLocalStorageObject("user", window.dl.user);
                }
            }
        }
    }
}
var callback = function (form) {
    if (!form.settings.plugins) {
        return;
    }
    var trackingConfig = form.settings.plugins;
    form.on('formRendered', exports.PLUGIN_LISTENER_NAME, function () {
        if (form.htmlElement) {
            var form_element = form.htmlElement;
            if (form_element.querySelectorAll('[name="deliveryPreference"]').length) {
                form_element.querySelectorAll('[name="deliveryPreference"]').forEach(function (deliveryMethod) {
                    deliveryMethod.addEventListener("click", triggerFieldInteractionEvent);
                });
            }
            form_element.querySelectorAll('input[type=text]').forEach(function (fld) {
                fld.removeEventListener("blur", triggerFieldInteractionEvent);
                fld.addEventListener("blur", triggerFieldInteractionEvent);
            });
            form_element.querySelectorAll('select').forEach(function (fld) {
                fld.addEventListener('change', triggerFieldInteractionEvent);
            });
            form_element.querySelectorAll('input[type=radio]').forEach(function (fld) {
                fld.removeEventListener("change", triggerFieldInteractionEvent);
                fld.addEventListener("change", triggerFieldInteractionEvent);
            });
        }
    });
    form.on('postformRendered', exports.PLUGIN_LISTENER_NAME, function () {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6;
        var dl_form = {
            id: form.settings.id,
            platform: form.htmlElement.getAttribute('form-version'),
            type: form.htmlElement.getAttribute('form-type'),
            program_id: ((_a = trackingConfig.legacySettings) === null || _a === void 0 ? void 0 : _a.programCode) || "not-set",
            product_id: ((_b = trackingConfig.legacySettings) === null || _b === void 0 ? void 0 : _b.productCode) || "not-set",
            step: 1,
            version: ((_c = trackingConfig.legacySettings) === null || _c === void 0 ? void 0 : _c.websiteId) || 'product',
            library_x: true
        };
        window.dl = window.dl || {};
        window.dl.form = window.dl.form || dl_form;
        window.dl.events = window.dl.events || [];
        var debouncedScrollListener = debounce_1.default(function () {
            var _a, _b, _c;
            var htmlelement_chk;
            if (window.dl.form.type === 'PQ' || window.dl.form.type === 'ePQ') {
                htmlelement_chk = (_a = document.getElementById('Age')) !== null && _a !== void 0 ? _a : document.getElementById('destination');
            }
            if (window.dl.form.type === 'R' || window.dl.form.type === 'RE' || window.dl.form.type === 'RES') {
                htmlelement_chk = (_b = document.getElementById('travelTypeSet')) !== null && _b !== void 0 ? _b : document.getElementById('destination');
            }
            if (htmlelement_chk && misc_1.isInViewport(htmlelement_chk)) {
                window.removeEventListener('scroll', debouncedScrollListener, true);
                window.removeEventListener('scroll', debouncedScrollListener, false);
                (_c = window.dl) === null || _c === void 0 ? void 0 : _c.events.pushWithEvent({ "event": FORM_VIEW, "form": window.dl.form });
                debouncedScrollListener.clear();
            }
        }, 250);
        if (window.dl.form.type === 'PQ' || window.dl.form.type === 'ePQ') {
            var htmlelement_first = (_d = document.getElementById('Age')) !== null && _d !== void 0 ? _d : document.getElementById('destination');
            if (htmlelement_first) {
                if (misc_1.isInViewport(htmlelement_first)) {
                    (_e = window.dl) === null || _e === void 0 ? void 0 : _e.events.pushWithEvent({ "event": FORM_VIEW, "form": window.dl.form });
                }
                else {
                    window.addEventListener('scroll', debouncedScrollListener, { passive: true });
                }
                (_f = document.getElementById('destination')) === null || _f === void 0 ? void 0 : _f.removeEventListener("change", triggerFieldInteractionEvent);
                (_g = document.getElementById('destination')) === null || _g === void 0 ? void 0 : _g.addEventListener("change", triggerFieldInteractionEvent);
                (_h = document.getElementById('course')) === null || _h === void 0 ? void 0 : _h.removeEventListener("change", triggerFieldInteractionEvent);
                (_j = document.getElementById('course')) === null || _j === void 0 ? void 0 : _j.addEventListener("change", triggerFieldInteractionEvent);
                (_k = document.getElementById('duration')) === null || _k === void 0 ? void 0 : _k.removeEventListener("change", triggerFieldInteractionEvent);
                (_l = document.getElementById('duration')) === null || _l === void 0 ? void 0 : _l.addEventListener("change", triggerFieldInteractionEvent);
                (_m = document.getElementById('Period')) === null || _m === void 0 ? void 0 : _m.removeEventListener("change", triggerFieldInteractionEvent);
                (_o = document.getElementById('Period')) === null || _o === void 0 ? void 0 : _o.addEventListener("change", triggerFieldInteractionEvent);
                (_p = document.getElementById('accommodation')) === null || _p === void 0 ? void 0 : _p.removeEventListener("change", triggerFieldInteractionEvent);
                (_q = document.getElementById('accommodation')) === null || _q === void 0 ? void 0 : _q.addEventListener("change", triggerFieldInteractionEvent);
                (_r = document.getElementById('startDate')) === null || _r === void 0 ? void 0 : _r.removeEventListener("change", triggerFieldInteractionEvent);
                (_s = document.getElementById('startDate')) === null || _s === void 0 ? void 0 : _s.addEventListener("change", triggerFieldInteractionEvent);
                (_t = document.getElementById('StartDate')) === null || _t === void 0 ? void 0 : _t.removeEventListener("change", triggerFieldInteractionEvent);
                (_u = document.getElementById('StartDate')) === null || _u === void 0 ? void 0 : _u.addEventListener("change", triggerFieldInteractionEvent);
            }
            document.querySelectorAll('input[data-action="next"],button[data-action="next"]').forEach(function (fld) {
                fld.removeEventListener("click", triggerNextStep);
                fld.addEventListener("click", triggerNextStep);
            });
            document.querySelectorAll('input[data-action="back"],button[data-action="back"]').forEach(function (fld) {
                fld.removeEventListener("click", triggerPrevStep);
                fld.addEventListener("click", triggerPrevStep);
            });
        }
        if (window.dl.form.type === 'R' || window.dl.form.type === 'RE' || window.dl.form.type === 'RES') {
            var htmlelement_first = (_v = document.getElementById('travelTypeSet')) !== null && _v !== void 0 ? _v : document.getElementById('destination');
            if (htmlelement_first) {
                if (misc_1.isInViewport(htmlelement_first)) {
                    (_w = window.dl) === null || _w === void 0 ? void 0 : _w.events.pushWithEvent({ "event": FORM_VIEW, "form": window.dl.form });
                }
                else {
                    window.addEventListener('scroll', debouncedScrollListener, { passive: true });
                }
                (_x = document.getElementById('travelTypeSet')) === null || _x === void 0 ? void 0 : _x.removeEventListener("change", triggerFieldInteractionEvent);
                (_y = document.getElementById('travelTypeSet')) === null || _y === void 0 ? void 0 : _y.addEventListener("change", triggerFieldInteractionEvent);
                (_z = document.getElementById('destination')) === null || _z === void 0 ? void 0 : _z.removeEventListener("change", triggerFieldInteractionEvent);
                (_0 = document.getElementById('destination')) === null || _0 === void 0 ? void 0 : _0.addEventListener("change", triggerFieldInteractionEvent);
                (_1 = document.getElementById('courseSet')) === null || _1 === void 0 ? void 0 : _1.removeEventListener("change", triggerFieldInteractionEvent);
                (_2 = document.getElementById('courseSet')) === null || _2 === void 0 ? void 0 : _2.addEventListener("change", triggerFieldInteractionEvent);
                (_3 = document.getElementById('durationSet')) === null || _3 === void 0 ? void 0 : _3.removeEventListener("change", triggerFieldInteractionEvent);
                (_4 = document.getElementById('durationSet')) === null || _4 === void 0 ? void 0 : _4.addEventListener("change", triggerFieldInteractionEvent);
                (_5 = document.getElementById('startDateSet')) === null || _5 === void 0 ? void 0 : _5.removeEventListener("change", triggerFieldInteractionEvent);
                (_6 = document.getElementById('startDateSet')) === null || _6 === void 0 ? void 0 : _6.addEventListener("change", triggerFieldInteractionEvent);
            }
            document.querySelectorAll('input[data-action="next"],button[data-action="next"]').forEach(function (fld) {
                fld.removeEventListener("click", triggerNextStep);
                fld.addEventListener("click", triggerNextStep);
            });
            document.querySelectorAll('input[data-action="back"],button[data-action="back"]').forEach(function (fld) {
                fld.removeEventListener("click", triggerPrevStep);
                fld.addEventListener("click", triggerPrevStep);
            });
        }
        if (form.htmlElement.querySelectorAll('input[name="brochure-deliveryPreference"').length > 0) {
            form.htmlElement.querySelectorAll('input[name="brochure-deliveryPreference"').forEach(function (deliveryMethod) {
                deliveryMethod.addEventListener("click", function () {
                    setTimeout(function () {
                        var _a;
                        window.dl.form.delivery_pref = form.data.deliveryPreference === 'F-B' ? "offline" : 'online';
                        (_a = window.dl) === null || _a === void 0 ? void 0 : _a.events.pushWithEvent({ "event": FIELD_BROCHUREVARIANT_CHANGE, "form": window.dl.form });
                    }, 100);
                });
            });
            window.dl.form.delivery_pref = form.data.deliveryPreference === 'F-B' ? "offline" : 'online';
        }
    });
    form.on('formView', exports.PLUGIN_LISTENER_NAME, function () {
        var _a;
        if (window.dl.form.type !== "PQ" && window.dl.form.type !== "ePQ" && window.dl.form.type !== 'R' && window.dl.form.type !== 'RE' && window.dl.form.type !== 'RES') {
            (_a = window.dl) === null || _a === void 0 ? void 0 : _a.events.pushWithEvent({ "event": FORM_VIEW, "form": window.dl.form });
        }
    });
    form.on('validationFailed', exports.PLUGIN_LISTENER_NAME, function () {
        var _a;
        (_a = window.dl) === null || _a === void 0 ? void 0 : _a.events.pushWithEvent({ "event": FIELD_VALIDATION_ERROR, "form": window.dl.form });
    });
    form.on('submissionCompleted', exports.PLUGIN_LISTENER_NAME, function () {
        var _a, _b, _c, _d, _e, _f;
        console.log(form.submissionResponseData);
        if (window && window.setPageNameDependentProps && trackingConfig.tracking) {
            var _g = trackingConfig.tracking, firstLevel = _g.firstLevel, secondLevel = _g.secondLevel, thankYouPageName = _g.thankYouPageName;
            var customPageName = firstLevel + ":" + secondLevel + ":[" + thankYouPageName + "]";
            window.setPageNameDependentProps(customPageName);
        }
        window.dl = window.dl || {};
        window.dl.user = window.dl.user || {};
        window.dl.user.form_activity = window.dl.user.form_activity || {};
        window.dl.user.form_activity.last_enquiry_date = new Date().getTime();
        window.dl.user.form_activity.form_start_count = 0;
        window.dl.user.form_activity.last_program_id_crm = (_a = form.submissionResponseData) === null || _a === void 0 ? void 0 : _a.TrueProgramCode;
        window.dl.user.form_activity.log = window.dl.user.form_activity.log || [];
        window.dl.user.form_activity.log.unshift({
            program_id: window.dl.form.program_id,
            program_id_crm: window.dl.user.form_activity.last_program_id_crm,
            product_id: (_b = trackingConfig.legacySettings) === null || _b === void 0 ? void 0 : _b.programCode,
            timestamp: window.dl.user.form_activity.last_enquiry_date
        });
        window.dl.form = window.dl.form || {};
        window.dl.form.program_id_crm = (_c = form.submissionResponseData) === null || _c === void 0 ? void 0 : _c.TrueProgramCode;
        var locstg_user = JSON.parse(JSON.stringify(window.dl.user));
        (_e = (_d = window.dl) === null || _d === void 0 ? void 0 : _d.utility) === null || _e === void 0 ? void 0 : _e.setLocalStorageObject('user', locstg_user);
        (_f = window.dl.events) === null || _f === void 0 ? void 0 : _f.pushWithEvent({ "event": FORM_SUCCESS, "form": window.dl.form });
    });
    form.on('submissionFailed', exports.PLUGIN_LISTENER_NAME, function () {
        var _a;
        (_a = window.dl) === null || _a === void 0 ? void 0 : _a.events.pushWithEvent({ "event": FORM_SUBMIT_ERROR, "form": window.dl.form });
    });
    form.on('submissionObjectReady', exports.PLUGIN_LISTENER_NAME, function () {
        var _a;
        form.data.tracking = getFormTrackingData();
        (_a = window.dl) === null || _a === void 0 ? void 0 : _a.events.pushWithEvent({ "event": FORM_SUMBIT, "form": window.dl.form });
    });
};
exports.default = callback;
