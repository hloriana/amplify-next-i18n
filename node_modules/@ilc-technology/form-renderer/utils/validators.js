"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.asyncPhoneNumberValidation = exports.asyncEmailValidation = exports.validDate = exports.required = exports.pattern = exports.maxlength = exports.minlength = void 0;
var minlength = function (value, target) { return value.length >= target; };
exports.minlength = minlength;
var maxlength = function (value, target) { return value.length <= target; };
exports.maxlength = maxlength;
var pattern = function (value, target) { return !value || new RegExp(target).test(value); };
exports.pattern = pattern;
var required = function (value) { return !!value; };
exports.required = required;
var validDate = function (date) {
    if (!date)
        return false;
    var year = date.year, month = date.month, day = date.day;
    if (year < 1900 || year > new Date().getFullYear() || month < 1 || month > 12) {
        return false;
    }
    var isLeap = year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
    var maxDayValue = [31, isLeap ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    return day >= 1 && day <= maxDayValue[month - 1];
};
exports.validDate = validDate;
var asyncEmailValidation = function (value) {
    return new Promise(function (resolve) {
        setTimeout(function () {
            if (value === 'fail@ef.com') {
                resolve(false);
                return;
            }
            resolve(true);
        }, 1500);
    });
};
exports.asyncEmailValidation = asyncEmailValidation;
var asyncPhoneNumberValidation = function (value) {
    return new Promise(function (resolve) {
        var data = new URLSearchParams();
        data.append("phone", value);
        fetch("https://intl-tel-input-2837.twil.io/lookup", {
            method: "POST",
            body: data,
        }).then(function (res) {
            res.json().then(function (resObj) {
                return resolve(resObj.success);
            });
        }).catch(function (err) {
            return resolve(false);
        });
    });
};
exports.asyncPhoneNumberValidation = asyncPhoneNumberValidation;
