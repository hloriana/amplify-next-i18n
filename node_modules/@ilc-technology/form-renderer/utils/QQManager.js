"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var misc_1 = require("./misc");
var fetchAvailablePrograms_1 = __importDefault(require("./fetchAvailablePrograms"));
var fetchAgeBrackets_1 = __importDefault(require("./fetchAgeBrackets"));
var getQQAllocationProgramCode_1 = __importDefault(require("./getQQAllocationProgramCode"));
var QQDOMHandler = (function () {
    function QQDOMHandler(formType) {
        var _this = this;
        this._setCommonDOMElements = function (formType) {
            _this.courseLengthWrapper = document.getElementsByClassName('ef-form-courseLength-wrapper')[0];
            _this.courseLengthSelect = document.getElementById(formType + "-courseLength");
            _this.countryCodeSelect = document.getElementById(formType + "-countryCode");
            _this.userSelectedSourceCode = document.getElementById(formType + "-userSelectedSourceCode");
            if (misc_1.isMobile()) {
                _this.mobileBirthDateInput = document.getElementById(formType + "-birthDate");
            }
            else {
                _this.birthDateDayInput = document.getElementById(formType + "-day");
                _this.birthDateMonthInput = document.getElementById(formType + "-month");
                _this.birthDateYearInput = document.getElementById(formType + "-year");
            }
        };
        this._setBrochureQQMultiDOMElements = function (formType) {
            _this.programCategoryWrapper = document.getElementsByClassName('ef-form-programCategory-wrapper')[0];
            _this.programCategorySelect = document.getElementById(formType + "-programCategory");
            _this.exchangeOrInternationalHighSchoolDiplomaWrapper = document.getElementsByClassName('ef-form-exchangeOrInternationalHighSchoolDiploma-wrapper')[0];
            _this.exchangeOrInternationalHighSchoolDiplomaYesInput = document.getElementById(formType + "-exchangeOrInternationalHighSchoolDiploma-Yes");
        };
        this._setCampaignQQLangDOMElements = function (formType) {
            _this.wantsBrochureInput = document.getElementById(formType + "-wantsBrochure");
        };
        this.hideElement = function (elementName) {
            if (_this[elementName]) {
                _this[elementName].classList.add('ef-form-hidden');
            }
        };
        this.showElement = function (elementName) {
            if (_this[elementName]) {
                _this[elementName].classList.remove('ef-form-hidden');
            }
        };
        this.addOnChangeListener = function (elementName, callback) {
            if (_this[elementName]) {
                _this[elementName].onchange = callback;
            }
        };
        this.getProgramCategory = function () { var _a; return (_a = _this.programCategorySelect) === null || _a === void 0 ? void 0 : _a.value; };
        this.getAge = function () {
            var _a, _b, _c, _d, _e;
            if (misc_1.isMobile()) {
                if (!((_a = _this.mobileBirthDateInput) === null || _a === void 0 ? void 0 : _a.value))
                    return null;
                var _f = __read((_b = _this.mobileBirthDateInput) === null || _b === void 0 ? void 0 : _b.value.split('-'), 3), year = _f[0], month = _f[1], day = _f[2];
                return misc_1.getAge(year, month, day);
            }
            if (!((_c = _this.birthDateYearInput) === null || _c === void 0 ? void 0 : _c.value) || !((_d = _this.birthDateMonthInput) === null || _d === void 0 ? void 0 : _d.value) || !((_e = _this.birthDateDayInput) === null || _e === void 0 ? void 0 : _e.value))
                return null;
            return misc_1.getAge(_this.birthDateYearInput.value, _this.birthDateMonthInput.value, _this.birthDateDayInput.value);
        };
        this.getBirthDate = function () {
            var _a, _b, _c, _d, _e, _f, _g, _h;
            if (misc_1.isMobile()) {
                if (!((_a = _this.mobileBirthDateInput) === null || _a === void 0 ? void 0 : _a.value))
                    return null;
                var _j = __read((_b = _this.mobileBirthDateInput) === null || _b === void 0 ? void 0 : _b.value.split('-'), 3), year = _j[0], month = _j[1], day = _j[2];
                return month + "/" + day + "/" + year;
            }
            if (!((_c = _this.birthDateYearInput) === null || _c === void 0 ? void 0 : _c.value) || !((_d = _this.birthDateMonthInput) === null || _d === void 0 ? void 0 : _d.value) || !((_e = _this.birthDateDayInput) === null || _e === void 0 ? void 0 : _e.value))
                return null;
            return ((_f = _this.birthDateMonthInput) === null || _f === void 0 ? void 0 : _f.value) + "/" + ((_g = _this.birthDateDayInput) === null || _g === void 0 ? void 0 : _g.value) + "/" + ((_h = _this.birthDateYearInput) === null || _h === void 0 ? void 0 : _h.value);
        };
        this.getWantsBrochure = function () { return (_this.wantsBrochureInput ? _this.wantsBrochureInput.checked : false); };
        this.getCountryCode = function () { var _a; return (_a = _this.countryCodeSelect) === null || _a === void 0 ? void 0 : _a.value; };
        this.getUserSelectedSourceCode = function () { var _a; return (_a = _this.userSelectedSourceCode) === null || _a === void 0 ? void 0 : _a.value; };
        this.getCourseLength = function () { var _a; return (_a = _this.courseLengthSelect) === null || _a === void 0 ? void 0 : _a.value; };
        this.getExchangeOrInternationalHighSchoolDiploma = function () {
            var _a;
            if (_this.exchangeOrInternationalHighSchoolDiplomaYesInput) {
                return ((_a = _this.exchangeOrInternationalHighSchoolDiplomaYesInput) === null || _a === void 0 ? void 0 : _a.checked) ? 'Yes' : 'No';
            }
        };
        this.getProgramCategoryOptions = function () {
            var options = [];
            if (_this.programCategorySelect) {
                Array.from(_this.programCategorySelect.options).forEach(function (option) {
                    if (option.value) {
                        options.push({
                            text: option.text,
                            value: option.value,
                            index: option.index,
                        });
                    }
                });
            }
            return options;
        };
        this.removeProgramCategoryOption = function (programCategoryId) {
            var _a;
            var options = _this.getProgramCategoryOptions();
            var optionToRemove = options.find(function (option) { return option.value === programCategoryId; });
            if (optionToRemove) {
                if (optionToRemove.value === 'CORP') {
                    _this._storedCorpProgramCategoryOption = optionToRemove;
                }
                (_a = _this.programCategorySelect) === null || _a === void 0 ? void 0 : _a.options.remove(optionToRemove.index);
            }
        };
        this.addCorpProgramCategoryOption = function () {
            var _a;
            var options = _this.getProgramCategoryOptions();
            var corpOption = options.find(function (option) { return option.value === 'CORP'; });
            if (corpOption)
                return;
            if (_this._storedCorpProgramCategoryOption) {
                var option = document.createElement('option');
                option.text = _this._storedCorpProgramCategoryOption.text;
                option.value = _this._storedCorpProgramCategoryOption.value;
                (_a = _this.programCategorySelect) === null || _a === void 0 ? void 0 : _a.options.add(option);
            }
        };
        this.selectProgramCategoryOption = function (programCategoryId) {
            if (_this.programCategorySelect) {
                _this.programCategorySelect.value = programCategoryId;
            }
        };
        this._setCommonDOMElements(formType);
        if (/brochure-qq-multi/.test(formType)) {
            this._setBrochureQQMultiDOMElements(formType);
        }
        if (/campaign-qq-lang/.test(formType)) {
            this._setCampaignQQLangDOMElements(formType);
        }
    }
    return QQDOMHandler;
}());
var QQManager = (function () {
    function QQManager(formType, marketCode, overrideProgramCode) {
        var _this = this;
        this._formType = '';
        this._marketCode = '';
        this._availablePrograms = [];
        this._ageBrackets = [];
        this._initQQ = function () { return __awaiter(_this, void 0, void 0, function () {
            var _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        this._qqDomHandler.hideElement('programCategoryWrapper');
                        this._qqDomHandler.hideElement('courseLengthWrapper');
                        this._qqDomHandler.hideElement('exchangeOrInternationalHighSchoolDiplomaWrapper');
                        if (this._overrideProgramCode)
                            return [2];
                        _a = this;
                        return [4, fetchAvailablePrograms_1.default(this._marketCode)];
                    case 1:
                        _a._availablePrograms = _c.sent();
                        _b = this;
                        return [4, fetchAgeBrackets_1.default(this._marketCode)];
                    case 2:
                        _b._ageBrackets = _c.sent();
                        this._initListeners();
                        if (/brochure-qq-multi/.test(this._formType)) {
                            this._adjustProgramCategories();
                        }
                        this._updateQQMulti();
                        return [2];
                }
            });
        }); };
        this._initListeners = function () {
            if (/brochure-qq-multi/.test(_this._formType)) {
                _this._qqDomHandler.addOnChangeListener('programCategorySelect', _this._updateQQMulti);
            }
            if (misc_1.isMobile()) {
                _this._qqDomHandler.addOnChangeListener('mobileBirthDateInput', _this._updateQQMulti);
            }
            else {
                _this._qqDomHandler.addOnChangeListener('birthDateDayInput', _this._updateQQMulti);
                _this._qqDomHandler.addOnChangeListener('birthDateMonthInput', _this._updateQQMulti);
                _this._qqDomHandler.addOnChangeListener('birthDateYearInput', _this._updateQQMulti);
            }
            if (/campaign-qq-lang/.test(_this._formType)) {
                _this._qqDomHandler.addOnChangeListener('wantsBrochureInput', _this._updateQQMulti);
            }
        };
        this._adjustProgramCategories = function () {
            if (!_this._availablePrograms.includes('IA') && !_this._availablePrograms.includes('HSY')) {
                _this._qqDomHandler.removeProgramCategoryOption('HIGH');
            }
            if (!_this._availablePrograms.includes('ILSD')) {
                _this._qqDomHandler.removeProgramCategoryOption('LNGD');
            }
            if (!_this._availablePrograms.includes('BC')) {
                _this._qqDomHandler.removeProgramCategoryOption('UP');
            }
            if (!_this._availablePrograms.includes('LOC')) {
                _this._qqDomHandler.removeProgramCategoryOption('CORP');
            }
            if (_this._qqDomHandler.getProgramCategoryOptions().length > 1) {
                _this._qqDomHandler.showElement('programCategoryWrapper');
            }
            else {
                _this._qqDomHandler.selectProgramCategoryOption('LANG');
                _this._updateQQLang();
            }
        };
        this._updateQQMulti = function () {
            if (_this._isQQLang) {
                _this._updateQQLang();
                return;
            }
            if (_this._isQQMulti) {
                if (!_this._birthDate) {
                    _this._qqDomHandler.hideElement('programCategoryWrapper');
                }
                else {
                    _this._qqDomHandler.showElement('programCategoryWrapper');
                }
                if (_this._availablePrograms.includes('LOC') && _this._age && _this._age >= 18) {
                    _this._qqDomHandler.addCorpProgramCategoryOption();
                }
                else {
                    _this._qqDomHandler.removeProgramCategoryOption('CORP');
                }
            }
            if (!_this._programCategory) {
                _this._qqDomHandler.hideElement('exchangeOrInternationalHighSchoolDiplomaWrapper');
                _this._qqDomHandler.hideElement('courseLengthWrapper');
            }
            else if (_this._programCategory === 'LANG') {
                _this._qqDomHandler.hideElement('exchangeOrInternationalHighSchoolDiplomaWrapper');
                _this._updateQQLang();
            }
            else if (_this._programCategory === 'HIGH') {
                _this._qqDomHandler.hideElement('courseLengthWrapper');
                _this._updateQQHigh();
            }
            else {
                _this._qqDomHandler.hideElement('exchangeOrInternationalHighSchoolDiplomaWrapper');
                _this._qqDomHandler.hideElement('courseLengthWrapper');
            }
        };
        this._updateQQLang = function () {
            if (/campaign-qq-lang/.test(_this._formType) && !_this._wantsBrochure) {
                _this._qqDomHandler.hideElement('courseLengthWrapper');
                return;
            }
            if (!_this._age) {
                _this._qqDomHandler.hideElement('courseLengthWrapper');
            }
            else if (_this._age < _this._ageBrackets.high) {
                _this._qqDomHandler.hideElement('courseLengthWrapper');
            }
            else {
                _this._qqDomHandler.showElement('courseLengthWrapper');
            }
        };
        this._updateQQHigh = function () {
            if (_this._availablePrograms.includes('IA') && _this._availablePrograms.includes('HSY')) {
                _this._qqDomHandler.showElement('exchangeOrInternationalHighSchoolDiplomaWrapper');
            }
            else {
                _this._qqDomHandler.hideElement('exchangeOrInternationalHighSchoolDiplomaWrapper');
            }
        };
        this.getAllocationProgramCode = function () {
            _this._allocationProgramCode = getQQAllocationProgramCode_1.default(_this._availablePrograms, _this._ageBrackets, _this._programCategory, _this._age, _this._courseLength, _this._exchangeOrInternationalHighSchoolDiploma);
            return _this._allocationProgramCode;
        };
        this.getCampaignAllocationPrograms = function () {
            if (_this._overrideProgramCode)
                return [_this._overrideProgramCode];
            if (!_this._wantsBrochure)
                return ['ILS', 'ILC', 'LY'];
            return [_this._allocationProgramCode];
        };
        this._formType = formType;
        this._marketCode = marketCode;
        this._overrideProgramCode = overrideProgramCode;
        this._qqDomHandler = new QQDOMHandler(formType);
        this._initQQ();
    }
    Object.defineProperty(QQManager.prototype, "_programCategory", {
        get: function () {
            if (this._isQQLang) {
                return 'LANG';
            }
            return this._qqDomHandler.getProgramCategory();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(QQManager.prototype, "_age", {
        get: function () {
            return this._qqDomHandler.getAge();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(QQManager.prototype, "_birthDate", {
        get: function () {
            return this._qqDomHandler.getBirthDate();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(QQManager.prototype, "_wantsBrochure", {
        get: function () {
            return this._qqDomHandler.getWantsBrochure();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(QQManager.prototype, "_countryCode", {
        get: function () {
            return this._qqDomHandler.getCountryCode();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(QQManager.prototype, "_userSelectedSourceCode", {
        get: function () {
            return this._qqDomHandler.getUserSelectedSourceCode();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(QQManager.prototype, "_courseLength", {
        get: function () {
            return this._qqDomHandler.getCourseLength();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(QQManager.prototype, "_exchangeOrInternationalHighSchoolDiploma", {
        get: function () {
            return this._qqDomHandler.getExchangeOrInternationalHighSchoolDiploma();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(QQManager.prototype, "_isQQLang", {
        get: function () {
            return this._formType.includes('lang');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(QQManager.prototype, "_isQQMulti", {
        get: function () {
            return this._formType.includes('multi');
        },
        enumerable: false,
        configurable: true
    });
    QQManager.qqFormTypes = ['brochure-qq-multi', 'brochure-qq-lang', 'brochure-qq-lang-optimized', 'campaign-qq-lang', 'campaign-qq-lang-travel'];
    return QQManager;
}());
exports.default = QQManager;
