export interface IListener<EventType, IListenerCallback> {
    eventType: EventType;
    name: string;
    cb: IListenerCallback;
}
export interface IListenable<EventType, IListenerCallback> {
    on: (eventType: EventType, name: string, cb: IListenerCallback) => IListenable<EventType, IListenerCallback>;
    removeListener: (eType: EventType, lName: string) => IListenable<EventType, IListenerCallback>;
    removeDefaultPluginListeners: () => IListenable<EventType, IListenerCallback>;
}
export declare class Listenable<EventType, IListenerCallback> implements IListenable<EventType, IListenerCallback> {
    _listeners: IListener<EventType, IListenerCallback>[];
    get listeners(): IListener<EventType, IListenerCallback>[];
    on(eventType: EventType, name: string, cb: IListenerCallback): this;
    removeListener(eType: EventType, lName: string): this;
    removeDefaultPluginListeners(): this;
    _filterArray(eType: EventType): IListener<EventType, IListenerCallback>[];
    _executeListeners(eType: EventType): void;
}
