"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Form = void 0;
var debounce_1 = __importDefault(require("debounce"));
var fields_1 = __importDefault(require("./fields"));
var dom_1 = require("./utils/dom");
var config_1 = __importDefault(require("./utils/config"));
var logger_1 = require("./utils/logger");
var misc_1 = require("./utils/misc");
var Listenable_1 = require("./utils/Listenable");
var ef_env_utils_1 = require("@ilc-technology/ef-env-utils");
var tracking_1 = __importDefault(require("./plugins/tracking"));
var v4_adapter_1 = __importDefault(require("./plugins/v4-adapter"));
var local_storage_1 = __importDefault(require("./plugins/local-storage"));
var intl_phone_number_1 = __importDefault(require("./plugins/intl-phone-number"));
var appendMandatoryStyles = function () {
    if (document.getElementById('ef-form-styles'))
        return;
    var newStyles = document.createElement('style');
    newStyles.id = 'ef-form-styles';
    newStyles.innerText = ".ef-form-hidden { display: none } .ef-form-birthDate-gud-wrapper {\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n  .ef-form-birthDate-gud-wrapper .ef-form-label {\n    width: 100%;\n  }\n  .ef-form-birthDate-gud-wrapper select {\n    display: inline-block;\n    flex: 1;\n  }\n  .ef-form-birthDate-gud-wrapper.-is-invalid,\n  .ef-form-birthDate-gud-wrapper.-is-valid {\n    padding-right: 16px;\n    margin-right: -16px;\n  }\n  .ef-form-birthDate-gud-wrapper.ef-input-w:not(.ef-boolean).-is-invalid:after,\n  .ef-form-birthDate-gud-wrapper.ef-input-w:not(.ef-boolean).-is-valid:after {\n    margin-right: 16px;\n  }\n  " + (misc_1.isMobile()
        ? ''
        : "@media (min-width: 768px) {\n    .ef-form-birthDate-gud-wrapper.-is-invalid,\n    .ef-form-birthDate-gud-wrapper.-is-valid {\n      padding-right: 16px;\n    }\n    .ef-form-birthDate-gud-wrapper.-is-invalid #campaign-year:not(.ef-form-empty) {\n      margin-right: 0;\n    }\n  }") + "\n  ";
    document.head.appendChild(newStyles);
};
var Form = (function (_super) {
    __extends(Form, _super);
    function Form(settings) {
        var _this = _super.call(this) || this;
        _this.settings = settings;
        _this._internalFields = [];
        _this._pluginPromises = [];
        _this._internalData = {};
        _this._validationErrors = {
            errorList: [],
            fullTextErrorList: [],
        };
        _this._registeredPlugins = [];
        _this.submit = _this.submit.bind(_this);
        return _this;
    }
    Object.defineProperty(Form.prototype, "htmlElement", {
        get: function () {
            return this._htmlElement;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Form.prototype, "fields", {
        get: function () {
            return this._internalFields;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Form.prototype, "formConfiguration", {
        get: function () {
            return this._formConfiguration;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Form.prototype, "data", {
        get: function () {
            return this._internalData;
        },
        enumerable: false,
        configurable: true
    });
    Form.prototype.unsafeSetData = function (data) {
        this._internalData = data;
    };
    Object.defineProperty(Form.prototype, "validationErrors", {
        get: function () {
            return this._validationErrors;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Form.prototype, "submissionResponseData", {
        get: function () {
            return this._submissionResponseData;
        },
        enumerable: false,
        configurable: true
    });
    Form.prototype.loadConfiguration = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, id, marketCode, applyGud, _b, formConfigurationEndpoint, env, configEndpoint, url, res, formConfiguration, _c, scriptFiles, styleFiles, err_1;
            var _this = this;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _d.trys.push([0, 3, , 4]);
                        _a = this.settings, id = _a.id, marketCode = _a.marketCode, applyGud = _a.applyGud, _b = _a.formConfigurationEndpoint, formConfigurationEndpoint = _b === void 0 ? '' : _b;
                        env = 'prod';
                        if (ef_env_utils_1.isLocal()) {
                            env = 'dev';
                        }
                        if (ef_env_utils_1.isQA()) {
                            env = 'qa';
                        }
                        configEndpoint = formConfigurationEndpoint || config_1.default.endpoint[env];
                        url = configEndpoint.replace('{type}', id).replace('{market}', marketCode);
                        return [4, fetch(url)];
                    case 1:
                        res = _d.sent();
                        return [4, res.json()];
                    case 2:
                        formConfiguration = _d.sent();
                        this._formConfiguration = __assign(__assign(__assign({}, formConfiguration.form), formConfiguration.form.form), { applyGud: applyGud });
                        _c = this._formConfiguration, scriptFiles = _c.scriptFiles, styleFiles = _c.styleFiles;
                        if (scriptFiles) {
                            scriptFiles.forEach(function (script) {
                                var plugin = script;
                                if (!Form._globalPlugins.find(function (p) { return p.name === plugin.pluginName; })) {
                                    var p = misc_1.appendScript(plugin.pluginPath);
                                    if (plugin.pluginName) {
                                        p.then(function () {
                                            Form._globalPlugins.push({
                                                name: plugin.pluginName,
                                                cb: window["formsx-plugins-" + plugin.pluginName].default,
                                            });
                                        }).catch(function (err) {
                                            logger_1.logError("cannot load plugin " + plugin.pluginName + " from " + plugin.pluginPath);
                                            console.log(err);
                                        });
                                        _this._pluginPromises.push(p);
                                    }
                                }
                                _this._registeredPlugins.push(plugin.pluginName);
                                _this._registeredPlugins = __spreadArray([], __read(new Set(_this._registeredPlugins)));
                            });
                        }
                        if (styleFiles) {
                            styleFiles.forEach(function (style) { return misc_1.appendStyles(style); });
                        }
                        return [2, this];
                    case 3:
                        err_1 = _d.sent();
                        logger_1.throwError("Can't get a valid form configuration from the following URL: " + config_1.default.endpoint, err_1);
                        return [3, 4];
                    case 4: return [2];
                }
            });
        });
    };
    Form.prototype.render = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, container, marketCode, id, applyGud, formWrapperCSSClass, wrapper, exc_1, fragment, i, fieldConf, field, fieldNode, validationRecap, submitButton, submitButtonContainer, debouncedScrollListener_1;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        appendMandatoryStyles();
                        _a = this.settings, container = _a.container, marketCode = _a.marketCode, id = _a.id, applyGud = _a.applyGud, formWrapperCSSClass = _a.formWrapperCSSClass;
                        wrapper = document.querySelector(container);
                        if (!wrapper) return [3, 6];
                        if (!!this._formConfiguration) return [3, 2];
                        return [4, this.loadConfiguration()];
                    case 1:
                        _b.sent();
                        _b.label = 2;
                    case 2:
                        _b.trys.push([2, 4, , 5]);
                        return [4, Promise.all(this._pluginPromises)];
                    case 3:
                        _b.sent();
                        return [3, 5];
                    case 4:
                        exc_1 = _b.sent();
                        logger_1.logError('loading plugins failed');
                        return [3, 5];
                    case 5:
                        this._executePlugins();
                        this._executeListeners('configurationDownloaded');
                        this.container = wrapper;
                        this._htmlElement = dom_1.createElement('form', {
                            id: id + "-form",
                            onsubmit: 'return false;',
                            novalidate: '',
                            class: (formWrapperCSSClass || 'ef-form') + " ef-form-mc-" + marketCode,
                        });
                        fragment = document.createDocumentFragment();
                        for (i = 0; i < this.formConfiguration.fields.length; i += 1) {
                            fieldConf = this.formConfiguration.fields[i];
                            field = fields_1.default.buildField(fieldConf, this);
                            if (field) {
                                this.fields.push(field);
                                fieldNode = field.render();
                                if (fieldNode) {
                                    if (field._required) {
                                        fieldNode.classList.add('ef-form-required');
                                    }
                                    fragment.appendChild(fieldNode);
                                }
                            }
                        }
                        if (!applyGud) {
                            validationRecap = dom_1.createElement('div', {
                                id: 'validation-recap',
                            });
                            fragment.appendChild(validationRecap);
                        }
                        submitButton = dom_1.createElement('button', {
                            id: "submit-" + id,
                            class: 'ef-form-submit ef-button -primary',
                        }, this._formConfiguration.submissionButtonLabel);
                        submitButton.addEventListener('click', this.submit);
                        submitButtonContainer = dom_1.createElement('span', {
                            class: 'ef-form-submit-container',
                        }, submitButton);
                        fragment.appendChild(submitButtonContainer);
                        this._htmlElement.appendChild(fragment);
                        this.container.appendChild(this._htmlElement);
                        this._executeListeners('formRendered');
                        debouncedScrollListener_1 = debounce_1.default(function () {
                            if (misc_1.isInViewport(_this.htmlElement)) {
                                window.removeEventListener('scroll', debouncedScrollListener_1, true);
                                window.removeEventListener('scroll', debouncedScrollListener_1, false);
                                debouncedScrollListener_1.clear();
                                _this._executeListeners('formView');
                            }
                        }, 250);
                        if (misc_1.isInViewport(this.htmlElement)) {
                            this._executeListeners('formView');
                        }
                        else {
                            window.addEventListener('scroll', debouncedScrollListener_1, { passive: true });
                        }
                        return [3, 7];
                    case 6:
                        logger_1.logError("Couldn't render form on non-existent element: " + container + ". Please make sure to specify a valid selector for the form wrapper.");
                        _b.label = 7;
                    case 7: return [2, this];
                }
            });
        });
    };
    Form.registerGlobalPlugin = function (name, cb) {
        this._globalPlugins.push({
            name: name,
            cb: cb,
        });
    };
    Form.prototype._executePlugins = function () {
        var _this = this;
        this._registeredPlugins.forEach(function (name) {
            var plugin = Form._globalPlugins.find(function (p) { return p.name === name; });
            if (plugin) {
                plugin.cb(_this);
            }
        });
    };
    Form.prototype.changeMarketCode = function (marketCode) {
        console.log("Reloading form with marketCode: " + marketCode);
        var container = this.settings.container;
        var wrapper = document.querySelector(container);
        if (wrapper) {
            wrapper.innerHTML = '';
        }
        this.fields.splice(0, this.fields.length);
        this._formConfiguration = undefined;
        this.settings.marketCode = marketCode;
        this.removeDefaultPluginListeners();
        this.render();
    };
    Form.prototype.submit = function () {
        return __awaiter(this, void 0, void 0, function () {
            var promises, submitButton, results, globalOutcome_1, submissionEndpoint, res, _a, exc_2, exc_3;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        promises = this.fields.map(function (f) { return f.validate(); });
                        submitButton = this.htmlElement.querySelector('.ef-form-submit');
                        if (submitButton) {
                            submitButton.disabled = true;
                        }
                        this.htmlElement.classList.add('ef-form-submitting');
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 9, , 10]);
                        return [4, Promise.all(promises)];
                    case 2:
                        results = _b.sent();
                        globalOutcome_1 = true;
                        this._validationErrors = {
                            errorList: [],
                            fullTextErrorList: [],
                        };
                        results.forEach(function (_a) {
                            var _b, _c;
                            var outcome = _a.outcome, errorList = _a.errorList, fullTextErrorList = _a.fullTextErrorList;
                            if (!outcome) {
                                globalOutcome_1 = false;
                                (_b = _this._validationErrors.errorList).push.apply(_b, __spreadArray([], __read(errorList)));
                                (_c = _this._validationErrors.fullTextErrorList).push.apply(_c, __spreadArray([], __read(fullTextErrorList)));
                            }
                        });
                        if (!!globalOutcome_1) return [3, 3];
                        _super.prototype._executeListeners.call(this, 'validationFailed');
                        this.htmlElement.classList.remove('ef-form-submitting');
                        if (submitButton) {
                            submitButton.disabled = false;
                        }
                        return [3, 8];
                    case 3:
                        this._executeListeners('submissionObjectReady');
                        submissionEndpoint = this.formConfiguration.submissionEndpoint;
                        _b.label = 4;
                    case 4:
                        _b.trys.push([4, 7, , 8]);
                        return [4, fetch(submissionEndpoint, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json; charset=UTF-8',
                                },
                                body: JSON.stringify(this.data),
                            })];
                    case 5:
                        res = _b.sent();
                        _a = this;
                        return [4, res.json()];
                    case 6:
                        _a._submissionResponseData = _b.sent();
                        this._executeListeners('submissionCompleted');
                        this.htmlElement.classList.remove('ef-form-submitting');
                        if (submitButton) {
                            submitButton.disabled = false;
                        }
                        return [3, 8];
                    case 7:
                        exc_2 = _b.sent();
                        logger_1.logError(exc_2);
                        this._executeListeners('submissionFailed');
                        return [3, 8];
                    case 8: return [3, 10];
                    case 9:
                        exc_3 = _b.sent();
                        logger_1.logWarning("Cannot validate form: " + exc_3);
                        return [3, 10];
                    case 10: return [2, this];
                }
            });
        });
    };
    Form._globalPlugins = [];
    return Form;
}(Listenable_1.Listenable));
exports.Form = Form;
Form.registerGlobalPlugin('tracking', tracking_1.default);
Form.registerGlobalPlugin('v4-adapter', v4_adapter_1.default);
Form.registerGlobalPlugin('local-storage', local_storage_1.default);
Form.registerGlobalPlugin('intl-phone-number', intl_phone_number_1.default);
