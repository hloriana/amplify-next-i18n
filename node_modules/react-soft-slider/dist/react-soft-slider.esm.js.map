{"version":3,"file":"react-soft-slider.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport { useSprings, animated, SpringConfig } from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport useResizeObserver from 'use-resize-observer'\n\ntype SliderProps = {\n  children: React.ReactNode[]\n  index: number\n  onIndexChange: (newIndex: number) => void\n  className?: string\n  style?: React.CSSProperties\n  slideClassName?: string\n  slideStyle?: React.CSSProperties | ((index: number) => React.CSSProperties)\n  indexRange?: [number, number]\n  onDragStart?: (pressedIndex: number) => void\n  onDragEnd?: (pressedIndex: number) => void\n  onTap?: (pressedIndex: number) => void\n} & typeof defaultProps\n\nconst defaultProps = {\n  enabled: true,\n  vertical: false,\n  slideAlign: 'center',\n  draggedScale: 1,\n  draggedSpring: { tension: 1200, friction: 40 } as SpringConfig,\n  trailingSpring: { tension: 120, friction: 30 } as SpringConfig,\n  releaseSpring: { tension: 120, friction: 30 } as SpringConfig,\n  trailingDelay: 50\n}\n\n// style for the slides wrapper\nconst slidesWrapperStyle = (vertical: boolean): React.CSSProperties => ({\n  display: 'flex',\n  flexWrap: 'nowrap',\n  alignItems: 'stretch',\n  position: 'relative',\n  WebkitUserSelect: 'none',\n  userSelect: 'none',\n  WebkitTouchCallout: 'none',\n  flexDirection: vertical ? 'column' : 'row',\n  touchAction: vertical ? 'pan-x' : 'pan-y'\n})\n\nconst clamp = (num: number, clamp: number, higher: number) =>\n  Math.min(Math.max(num, clamp), higher)\n\nexport const Slider = ({\n  children,\n  index,\n  onIndexChange,\n  className,\n  style,\n  slideStyle,\n  slideClassName,\n  enabled,\n  vertical,\n  indexRange,\n  slideAlign,\n  draggedScale,\n  draggedSpring,\n  releaseSpring,\n  trailingSpring,\n  trailingDelay,\n  onDragStart,\n  onDragEnd,\n  onTap\n}: SliderProps) => {\n  const slideStyleFunc =\n    typeof slideStyle === 'function' ? slideStyle : () => slideStyle\n  // root holds are slides wrapper node and we use a ResizeObserver\n  // to observe its size in order to recompute the slides position\n  // when it changes\n  const root = useRef<HTMLInputElement>(null)\n  const { width, height } = useResizeObserver({ ref: root })\n\n  const axis = vertical ? 'y' : 'x'\n  const size = vertical ? height : width\n\n  let [minIndex, maxIndex] = indexRange || [0, children.length - 1]\n  maxIndex = maxIndex > 0 ? maxIndex : children.length - 1 + maxIndex\n\n  // indexRef is an internal reference to the current slide index\n  const indexRef = useRef(index)\n\n  // restPos holds a reference to the adjusted position of the slider\n  // when rested\n  const restPos = useRef(0)\n  const velocity = useRef(0)\n\n  // visibleIndexes is a Set holding the index of slides that are\n  // currently partially or fully visible (intersecting) in the\n  // viewport\n  const visibleIndexes = useRef(new Set<number>())\n  const firstVisibleIndex = useRef(0)\n  const lastVisibleIndex = useRef(0)\n\n  // instances holds a ref to an array of controllers\n  // to simulate a spring trail. Mechanics is directly\n  // copied from here https://github.com/react-spring/react-spring/blob/31200a79843ce85200b2a7692e8f14788e60f9e9/src/useTrail.js#L14\n  // const instances = useRef()\n\n  // callback called by the intersection observer updating\n  // visibleIndexes\n  const cb: IntersectionObserverCallback = slides => {\n    slides.forEach(({ isIntersecting, target }) =>\n      visibleIndexes.current[isIntersecting ? 'add' : 'delete'](\n        Number(target.getAttribute('data-index'))\n      )\n    )\n    const visibles = Array.from(visibleIndexes.current).sort()\n    firstVisibleIndex.current = visibles[0]\n    lastVisibleIndex.current = visibles[visibles.length - 1]\n  }\n\n  const observer = useRef<IntersectionObserver | null>(null)\n\n  // we add the slides to the IntersectionObserver:\n  // this is recomputed everytime the user adds or removes a slide\n  useEffect(() => {\n    if (!observer.current) observer.current = new IntersectionObserver(cb)\n    Array.from(root.current!.children).forEach(t =>\n      observer.current!.observe(t)\n    )\n    return () => observer.current!.disconnect()\n  }, [children.length, root])\n\n  // setting the springs with initial position set to restPos:\n  // this is important when adding slides since changing children\n  // length recomputes useSprings\n  const [springs, set] = useSprings(children.length, _i => {\n    // zIndex will make sure the dragged slide stays on top of the others\n    return {\n      x: vertical ? 0 : restPos.current,\n      y: vertical ? restPos.current : 0,\n      s: 1,\n      zIndex: 0,\n      immediate: key => key === 'zIndex'\n    }\n  })\n\n  // everytime the index changes, we should calculate the right position\n  // of the slide so that its centered: this is recomputed everytime\n  // the index changes\n  useEffect(() => {\n    // if width and height haven't been set don't do anything\n    // (this happens on first render before useResizeObserver had the time to kick in)\n    if (!width || !height) return\n    // here we take the selected slide\n    // and calculate its position so its centered in the slides wrapper\n    if (vertical) {\n      const { offsetTop, offsetHeight } = root.current!.children[\n        index\n      ] as HTMLElement\n      restPos.current = Math.round(-offsetTop + (height - offsetHeight) / 2)\n    } else {\n      const { offsetLeft, offsetWidth } = root.current!.children[\n        index\n      ] as HTMLElement\n      restPos.current = Math.round(-offsetLeft + (width - offsetWidth) / 2)\n    }\n    // two options then:\n    // 1. the index was changed through gestures: in that case indexRef\n    // is equal to index, we just want to set the position where it should\n\n    if (indexRef.current === index) {\n      set(_i => ({\n        [axis]: restPos.current,\n        s: 1,\n        config: { ...releaseSpring, velocity: velocity.current }\n        // config: key =>\n        //   key === axis\n        //     ? { ...releaseSpring, velocity: velocity.current }\n        //     : undefined,\n      }))\n    } else {\n      // 2. the user has changed the index props: in that case indexRef\n      // is outdated and different from index. We want to animate depending\n      // on the direction of the slide, with the furthest slide moving first\n      // trailing the others\n\n      const dir = index < indexRef.current ? -1 : 1\n      // if direction is 1 then the first slide to animate should be the lowest\n      // indexed visible slide, if -1 the highest\n      const firstToMove =\n        dir > 0 ? firstVisibleIndex.current : lastVisibleIndex.current\n      set(i => {\n        return {\n          [axis]: restPos.current,\n          s: 1,\n          // config: key => key === axis && releaseSpring,\n          config: releaseSpring,\n          delay:\n            i * dir < firstToMove * dir\n              ? 0\n              : Math.abs(firstToMove - i) * trailingDelay\n        }\n      })\n    }\n    // finally we update indexRef to match index\n    indexRef.current = index\n  }, [\n    index,\n    set,\n    root,\n    vertical,\n    axis,\n    height,\n    width,\n    releaseSpring,\n    draggedSpring,\n    trailingDelay\n  ])\n\n  // adding the bind listener\n  const bind = useDrag(\n    ({\n      first,\n      last,\n      tap,\n      vxvy: [vx, vy],\n      delta: [dx, dy],\n      swipe: [sx, sy],\n      movement: [movX, movY],\n      args: [pressedIndex],\n      memo = springs[pressedIndex][axis].getValue()\n    }) => {\n      if (tap) {\n        onTap && onTap(pressedIndex)\n        return\n      }\n      const v = vertical ? vy : vx\n      const dir = -Math.sign(vertical ? dy : dx)\n      const mov = vertical ? movY : movX\n      const swipe = vertical ? sy : sx\n\n      if (first) {\n        // if this is the first drag event, we're trailing the controllers\n        // to the index being dragged and setting zIndex, scale and config\n        set(i => {\n          return {\n            [axis]: memo + mov,\n            s: draggedScale,\n            config: key =>\n              key === axis && i === pressedIndex\n                ? draggedSpring\n                : trailingSpring,\n            zIndex: i === pressedIndex ? 10 : 0\n          }\n        })\n\n        // triggering onDragStart prop if it exists\n        onDragStart && onDragStart(pressedIndex)\n      } else if (last) {\n        // when the user releases the drag and the distance or speed are superior to a threshold\n        // we update the indexRef\n        if (Math.abs(mov) > size! / 2 || swipe !== 0) {\n          indexRef.current = clamp(\n            indexRef.current + (mov > 0 ? -1 : 1),\n            minIndex,\n            maxIndex\n          )\n        }\n        // if the index is not equal to indexRef we know we've moved a slide\n        // so we tell the user to update its index in the next tick and our useEffect\n        // will do the rest. RAF is used to make sure we're not updating the index\n        // too fast: that might happen if the user wants to update a slide onClick\n        // TODO - need an example\n        if (index !== indexRef.current) {\n          velocity.current = v\n          requestAnimationFrame(() => onIndexChange(indexRef.current))\n        }\n        // if the index hasn't changed then we set the position back to where it should be\n        else\n          set(() => ({\n            [axis]: restPos.current,\n            s: 1,\n            // config: key => key === axis && releaseSpring,\n            config: releaseSpring\n          }))\n\n        // triggering onDragEnd prop if it exists\n        onDragEnd && onDragEnd(pressedIndex)\n      }\n\n      // if not we're just dragging and we're just updating the position\n      else {\n        const firstToMove =\n          dir > 0 ? firstVisibleIndex.current : lastVisibleIndex.current\n        set(i => {\n          return {\n            [axis]: mov + memo,\n            delay:\n              i * dir < firstToMove * dir || i === pressedIndex\n                ? 0\n                : Math.abs(firstToMove - i) * trailingDelay,\n            config: key =>\n              key === axis && i === pressedIndex\n                ? draggedSpring\n                : trailingSpring\n          }\n        })\n      }\n\n      // and returning memo to keep the initial position in cache along drag\n      return memo\n    },\n    { enabled, axis, filterTaps: true }\n  )\n\n  const rootStyle = slidesWrapperStyle(vertical)\n  if (!className) rootStyle.width = '100%'\n\n  return (\n    <div ref={root} className={className} style={{ ...rootStyle, ...style }}>\n      {springs.map(({ [axis]: pos, s, zIndex }, i) => (\n        <animated.div\n          // passing the index as an argument will let our handler know\n          // which slide is being dragged\n          {...bind(i)}\n          key={i}\n          data-index={i}\n          className={slideClassName}\n          style={{\n            [vertical ? 'justifyContent' : 'alignItems']: slideAlign,\n            display: 'flex',\n            ...slideStyleFunc(i),\n            zIndex,\n            [axis]: pos,\n            scale: s,\n            willChange: 'transform'\n          }}\n        >\n          {children[i]}\n        </animated.div>\n      ))}\n    </div>\n  )\n}\n\nSlider.defaultProps = defaultProps\n"],"names":["defaultProps","enabled","vertical","slideAlign","draggedScale","draggedSpring","tension","friction","trailingSpring","releaseSpring","trailingDelay","slidesWrapperStyle","display","flexWrap","alignItems","position","WebkitUserSelect","userSelect","WebkitTouchCallout","flexDirection","touchAction","clamp","num","higher","Math","min","max","Slider","children","index","onIndexChange","className","style","slideStyle","slideClassName","indexRange","onDragStart","onDragEnd","onTap","slideStyleFunc","root","useRef","useResizeObserver","ref","width","height","axis","size","length","minIndex","maxIndex","indexRef","restPos","velocity","visibleIndexes","Set","firstVisibleIndex","lastVisibleIndex","cb","slides","forEach","isIntersecting","target","current","Number","getAttribute","visibles","Array","from","sort","observer","useEffect","IntersectionObserver","t","observe","disconnect","useSprings","_i","x","y","s","zIndex","immediate","key","springs","set","offsetTop","offsetHeight","round","offsetLeft","offsetWidth","config","dir","firstToMove","i","delay","abs","bind","useDrag","first","last","tap","vxvy","vx","vy","delta","dx","dy","swipe","sx","sy","movement","movX","movY","args","pressedIndex","memo","getValue","v","sign","mov","requestAnimationFrame","filterTaps","rootStyle","React","map","pos","animated","div","scale","willChange"],"mappings":"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"}