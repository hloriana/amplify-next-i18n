const Logger=require("../helpers/logger"),{updatePreset:updatePreset,createPreset:createPreset}=require("./presets"),{getComponentPresets:getComponentPresets}=require("./componentPresets"),_resolvePresets=async(e,t,r)=>{const s=e.data.component.id;if(t&&t.length>0){const e=t.map(e=>({preset:{...e.preset,component_id:s}}));Logger.log(`Checking preset for '${r.name}' component`);const o=await getComponentPresets(r.name);let n=[],p=[];for(const t of e){const e=o&&o.find(e=>t.preset.name===e.preset.name);e?n.push({...t,preset:{id:e.preset.id,...t.preset}}):p.push(t)}n.map(e=>{updatePreset(e)}),p.map(e=>{createPreset(e)})}else Logger.warning("There are no presets for this component.")};module.exports=_resolvePresets;