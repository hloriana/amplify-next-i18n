const Logger=require("../helpers/logger"),{spaceId:spaceId}=require("../config"),{sbApi:sbApi}=require("./config"),getPreset=e=>(Logger.log(`Trying to get preset by id: ${e}`),sbApi.get(`spaces/${spaceId}/presets/${e}`).then(e=>e.data).then(r=>Array.isArray(r.presets)?(Logger.warning(`There is no preset for '${e}' preset id`),!1):r).catch(e=>Logger.error(e))),getAllPresets=()=>(Logger.log("Trying to get all Presets."),sbApi.get(`spaces/${spaceId}/presets/`).then(e=>e.data).catch(e=>Logger.error(e))),createPreset=e=>{sbApi.post(`spaces/${spaceId}/presets/`,{preset:e.preset}).then(r=>{Logger.warning(`Preset: '${e.preset.name}' has been created.`)}).catch(r=>{Logger.error(`Error happened. Preset: '${e.preset.name}' has been not created.`)})},updatePreset=e=>{sbApi.put(`spaces/${spaceId}/presets/${e.preset.id}`,{preset:e.preset}).then(r=>{Logger.warning(`Preset: '${e.preset.name}' with '${e.preset.id}' id has been updated.`)}).catch(r=>{Logger.error(`Error happened. Preset: '${e.preset.name}' with '${e.preset.id}' id has been not updated.`)})};module.exports={getPreset:getPreset,getAllPresets:getAllPresets,createPreset:createPreset,updatePreset:updatePreset};