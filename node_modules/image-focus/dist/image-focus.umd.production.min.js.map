{"version":3,"file":"image-focus.umd.production.min.js","sources":["../src/helpers/assign.ts","../src/sharedStyles.ts","../src/FocusPicker.ts","../src/helpers/noop.ts","../src/retina.svg","../src/FocusedImage.ts","../src/helpers/debounce.ts"],"sourcesContent":["export function assign(target: any, ...sources) {\n  sources.forEach(source =>\n    Object.keys(source).forEach(key => (target[key] = source[key]))\n  );\n  return target;\n}\n","export const CONTAINER_STYLES = {\n  position: 'relative',\n  overflow: 'hidden',\n};\n\nexport const ABSOLUTE_STYLES = {\n  position: 'absolute',\n  top: '0',\n  right: '0',\n  bottom: '0',\n  left: '0',\n};\n","import { noop } from './helpers/noop';\nimport { assign } from './helpers/assign';\nimport { CONTAINER_STYLES } from './sharedStyles';\nimport { Focus, FocusPickerOptions } from './interfaces';\n\nimport retina from './retina.svg';\n\nconst IMAGE_STYLES = {\n  // Get rid of bottom padding from default display\n  display: 'block',\n  // Make image fill container\n  maxWidth: '100%',\n  // Prevent Android refresh on pull down\n  touchAction: 'none',\n};\n\nconst RETINA_STYLES = {\n  position: 'absolute',\n  cursor: 'move',\n\n  // Center the retina\n  transform: 'translate(-50%, -50%)',\n};\n\nconst DEFAULT_OPTIONS: FocusPickerOptions = {\n  onChange: noop,\n  retina,\n};\n\nexport class FocusPicker {\n  container: HTMLElement;\n  img: HTMLImageElement;\n  retina: HTMLImageElement;\n  focus: Focus;\n  private isDragging: boolean;\n  private options: FocusPickerOptions;\n  private _enabled: boolean = false;\n\n  constructor(imageNode: HTMLImageElement, options: FocusPickerOptions = {}) {\n    // Merge options in\n    this.options = assign({}, DEFAULT_OPTIONS, options);\n\n    // Set up references\n    this.img = imageNode;\n    this.container = imageNode.parentElement;\n\n    // Styles and DOM config\n    this.img.draggable = false;\n    // Assign styles\n    assign(this.img.style, IMAGE_STYLES);\n    assign(this.container.style, CONTAINER_STYLES);\n\n    // Initialize Focus coordinates\n    this.focus = this.getFocus();\n\n    // Create and attach the retina focal point, start listeners and attach focus\n    this.enable();\n  }\n\n  private getFocus(): Focus {\n    return this.options.focus\n      ? this.options.focus\n      : {\n          x: parseFloat(this.img.getAttribute('data-focus-x')) || 0,\n          y: parseFloat(this.img.getAttribute('data-focus-y')) || 0,\n        };\n  }\n\n  /**\n   * Creates the focal point retina and\n   */\n  public enable() {\n    if (!this._enabled) {\n      // Create and attach the retina focal point\n      this.retina = document.createElement('img');\n      this.retina.src = this.options.retina;\n      this.retina.draggable = false;\n      this.container.appendChild(this.retina);\n      assign(this.retina.style, RETINA_STYLES);\n      this.startListening();\n      this.setFocus(this.focus);\n      this._enabled = true;\n    }\n  }\n\n  public disable() {\n    if (this._enabled && this.retina) {\n      this.stopListening();\n      this.container.removeChild(this.retina);\n      this._enabled = false;\n    }\n  }\n\n  get enabled(): boolean {\n    return this._enabled;\n  }\n\n  public startListening() {\n    // Bind container events\n    this.container.addEventListener('mousedown', this.startDragging);\n    this.container.addEventListener('mousemove', this.handleMove);\n    this.container.addEventListener('mouseup', this.stopDragging);\n    this.container.addEventListener('mouseleave', this.stopDragging);\n    this.container.addEventListener('touchend', this.stopDragging);\n\n    // temporarily cast config objs until this issue is resolved\n    // https://github.com/Microsoft/TypeScript/issues/9548\n    this.container.addEventListener('touchstart', this.startDragging, {\n      passive: true,\n    } as any);\n    this.container.addEventListener('touchmove', this.handleMove, {\n      passive: true,\n    } as any);\n\n    this.img.addEventListener('load', this.updateRetinaPositionFromFocus);\n  }\n\n  public stopListening() {\n    this.container.removeEventListener('mousedown', this.startDragging);\n    this.container.removeEventListener('mousemove', this.handleMove);\n    this.container.removeEventListener('mouseup', this.stopDragging);\n    this.container.removeEventListener('mouseleave', this.stopDragging);\n    this.container.removeEventListener('touchend', this.stopDragging);\n    this.container.removeEventListener('touchstart', this.startDragging);\n    this.container.removeEventListener('touchmove', this.handleMove);\n    this.img.removeEventListener('load', this.updateRetinaPositionFromFocus);\n  }\n\n  public setFocus(focus: Focus) {\n    this.focus = focus;\n    this.img.setAttribute('data-focus-x', focus.x.toString());\n    this.img.setAttribute('data-focus-y', focus.y.toString());\n    this.updateRetinaPositionFromFocus();\n    this.options.onChange(focus);\n  }\n\n  private startDragging = (e: MouseEvent | TouchEvent) => {\n    e.preventDefault();\n    this.isDragging = true;\n    e instanceof MouseEvent\n      ? this.updateCoordinates(e.clientX, e.clientY)\n      : this.updateCoordinates(e.touches[0].clientX, e.touches[0].clientY);\n  };\n\n  private handleMove = (e: MouseEvent | TouchEvent) => {\n    e.preventDefault();\n    if (e instanceof MouseEvent) {\n      this.updateCoordinates(e.clientX, e.clientY);\n    } else {\n      const touch = e.touches[0];\n      const touchedEl = document.elementFromPoint(touch.pageX, touch.pageY);\n      touchedEl !== this.retina && touchedEl !== this.img\n        ? this.stopDragging()\n        : this.updateCoordinates(touch.clientX, touch.clientY);\n    }\n  };\n\n  private stopDragging = () => {\n    this.isDragging = false;\n  };\n\n  private calculateOffsetFromFocus() {\n    const { width, height } = this.img.getBoundingClientRect();\n    const offsetX = width * (this.focus.x / 2 + 0.5);\n    const offsetY = height * (this.focus.y / -2 + 0.5);\n    return { offsetX, offsetY };\n  }\n\n  private updateRetinaPositionFromFocus = () => {\n    this.updateRetinaPosition(this.calculateOffsetFromFocus());\n  };\n\n  private updateRetinaPosition = (offsets: {\n    offsetX: number;\n    offsetY: number;\n  }) => {\n    this.retina.style.top = `${offsets.offsetY}px`;\n    this.retina.style.left = `${offsets.offsetX}px`;\n  };\n\n  private updateCoordinates(clientX: number, clientY: number) {\n    if (!this.isDragging) return; // bail if not dragging\n    const { width, height, left, top } = this.img.getBoundingClientRect();\n\n    // Calculate FocusPoint coordinates\n    const offsetX = clientX - left;\n    const offsetY = clientY - top;\n    const x = (offsetX / width - 0.5) * 2;\n    const y = (offsetY / height - 0.5) * -2;\n\n    // TODO: Figure out an elegant way to use the setFocus API without\n    // having to recalculate the offset from focus\n    this.setFocus({ x, y });\n  }\n}\n","// tslint:disable-next-line:no-empty\nexport const noop = () => {};\n","const img = \"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'%3e %3cg fill='none' fill-rule='evenodd'%3e %3ccircle id='a' cx='10' cy='10' r='10' fill='black' fill-opacity='.3' /%3e %3ccircle cx='10' cy='10' r='9' stroke='white' stroke-opacity='.8' stroke-width='2'/%3e %3c/g%3e%3c/svg%3e\";\n  export default img;","import { debounce } from './helpers/debounce';\nimport { assign } from './helpers/assign';\nimport { Focus, FocusedImageOptions } from './interfaces';\nimport { CONTAINER_STYLES, ABSOLUTE_STYLES } from './sharedStyles';\n\nconst IMG_STYLES = {\n  // Set these styles in case the image dimensions\n  // are smaller than the container's\n  minHeight: '100%',\n  minWidth: '100%',\n};\n\nconst RESIZE_LISTENER_OBJECT_STYLES = {\n  height: '100%',\n  width: '100%',\n  border: 'none',\n\n  // set these styles to emulate \"visibility: hidden\"\n  // can't use visibility because it breaks the object\n  // events in Firefox\n  opacity: 0,\n  zIndex: -1,\n  pointerEvents: 'none',\n};\n\nconst DEFAULT_OPTIONS: FocusedImageOptions = {\n  debounceTime: 17,\n  updateOnWindowResize: true,\n  updateOnContainerResize: false,\n  containerPosition: 'relative',\n};\n\nexport class FocusedImage {\n  focus: Focus;\n  options: FocusedImageOptions;\n  container: HTMLElement;\n  img: HTMLImageElement;\n  resizeListenerObject: HTMLObjectElement;\n  listening: boolean = false;\n  debounceApplyShift: () => void;\n\n  constructor(\n    private imageNode: HTMLImageElement,\n    options: FocusedImageOptions = {}\n  ) {\n    // Merge in options\n    this.options = assign(DEFAULT_OPTIONS, options);\n\n    // Set up element references\n    this.img = imageNode;\n    this.container = imageNode.parentElement;\n\n    // Set up instance\n    if (this.img['__focused_image_instance__']) {\n      this.img['__focused_image_instance__'].stopListening();\n      this.img.removeEventListener('load', this.applyShift);\n    }\n    this.img['__focused_image_instance__'] = this;\n\n    // Add image load event listener\n    this.img.addEventListener('load', this.applyShift);\n\n    // Set up styles\n    assign(this.container.style, CONTAINER_STYLES);\n    this.container.style.position = this.options.containerPosition;\n    assign(this.img.style, IMG_STYLES, ABSOLUTE_STYLES);\n\n    // Create debouncedShift function\n    this.debounceApplyShift = debounce(\n      this.applyShift,\n      this.options.debounceTime\n    );\n\n    // Initialize focus\n    this.focus = this.options.focus\n      ? this.options.focus\n      : {\n          x: parseFloat(this.img.getAttribute('data-focus-x')) || 0,\n          y: parseFloat(this.img.getAttribute('data-focus-y')) || 0,\n        };\n\n    // Start listening for resize events\n    this.startListening();\n\n    // Set focus\n    this.setFocus(this.focus);\n  }\n\n  public setFocus = (focus: Focus) => {\n    this.focus = focus;\n    this.img.setAttribute('data-focus-x', focus.x.toString());\n    this.img.setAttribute('data-focus-y', focus.y.toString());\n    this.applyShift();\n  };\n\n  public applyShift = () => {\n    const { naturalWidth: imageW, naturalHeight: imageH } = this.img;\n    const {\n      width: containerW,\n      height: containerH,\n    } = this.container.getBoundingClientRect();\n\n    // Amount position will be shifted\n    let hShift = '0';\n    let vShift = '0';\n\n    if (!(containerW > 0 && containerH > 0 && imageW > 0 && imageH > 0)) {\n      return false; // Need dimensions to proceed\n    }\n\n    // Which is over by more?\n    const wR = imageW / containerW;\n    const hR = imageH / containerH;\n\n    // Reset max-width and -height\n    this.img.style.maxHeight = null;\n    this.img.style.maxWidth = null;\n\n    // Minimize image while still filling space\n    if (imageW > containerW && imageH > containerH) {\n      this.img.style[wR > hR ? 'maxHeight' : 'maxWidth'] = '100%';\n    }\n\n    if (wR > hR) {\n      hShift = `${this.calcShift(hR, containerW, imageW, this.focus.x)}%`;\n    } else if (wR < hR) {\n      vShift = `${this.calcShift(wR, containerH, imageH, this.focus.y, true)}%`;\n    }\n\n    this.img.style.top = vShift;\n    this.img.style.left = hShift;\n  };\n\n  public startListening() {\n    if (this.listening) {\n      return;\n    }\n    this.listening = true;\n    if (this.options.updateOnWindowResize) {\n      window.addEventListener('resize', this.debounceApplyShift);\n    }\n    if (this.options.updateOnContainerResize) {\n      const object = document.createElement('object');\n      assign(object.style, RESIZE_LISTENER_OBJECT_STYLES, ABSOLUTE_STYLES);\n      // Use load event callback because contentDocument doesn't exist\n      // until this fires in Firefox\n      object.addEventListener('load', (e: Event) =>\n        object.contentDocument.defaultView.addEventListener('resize', () =>\n          this.debounceApplyShift()\n        )\n      );\n      object.type = 'text/html';\n      object.setAttribute('aria-hidden', 'true');\n      object.tabIndex = -1;\n      this.container.appendChild(object);\n      object.data = 'about:blank';\n      this.resizeListenerObject = object;\n    }\n  }\n\n  public stopListening() {\n    if (!this.listening) {\n      return;\n    }\n    this.listening = false;\n    window.removeEventListener('resize', this.debounceApplyShift);\n    if (\n      this.resizeListenerObject &&\n      this.resizeListenerObject.contentDocument\n    ) {\n      this.resizeListenerObject.contentDocument.defaultView.removeEventListener(\n        'resize',\n        this.debounceApplyShift\n      );\n      this.container.removeChild(this.resizeListenerObject);\n      this.resizeListenerObject = null;\n    }\n  }\n\n  // Calculate the new left/top percentage shift of an image\n  private calcShift(\n    conToImageRatio: number,\n    containerSize: number,\n    imageSize: number,\n    focusSize: number,\n    toMinus?: boolean\n  ) {\n    const containerCenter = Math.floor(containerSize / 2); // Container center in px\n    const focusFactor = (focusSize + 1) / 2; // Focus point of resize image in px\n    const scaledImage = Math.floor(imageSize / conToImageRatio); // Can't use width() as images may be display:none\n    let focus = Math.floor(focusFactor * scaledImage);\n    if (toMinus) focus = scaledImage - focus;\n    let focusOffset = focus - containerCenter; // Calculate difference between focus point and center\n    const remainder = scaledImage - focus; // Reduce offset if necessary so image remains filled\n    const containerRemainder = containerSize - containerCenter;\n    if (remainder < containerRemainder)\n      focusOffset -= containerRemainder - remainder;\n    if (focusOffset < 0) focusOffset = 0;\n\n    return (focusOffset * -100) / containerSize;\n  }\n}\n","export function debounce(func: Function, debounceTime: number) {\n  let timeout: any;\n  return function debouncedFunction(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), debounceTime);\n  };\n}\n"],"names":["assign","target","sources","forEach","source","Object","keys","key","CONTAINER_STYLES","position","overflow","ABSOLUTE_STYLES","top","right","bottom","left","IMAGE_STYLES","display","maxWidth","touchAction","RETINA_STYLES","cursor","transform","DEFAULT_OPTIONS","onChange","retina","FocusPicker","imageNode","options","e","preventDefault","_this","isDragging","MouseEvent","updateCoordinates","clientX","clientY","touches","touch","touchedEl","document","elementFromPoint","pageX","pageY","img","stopDragging","updateRetinaPosition","calculateOffsetFromFocus","offsets","style","offsetY","offsetX","container","parentElement","draggable","this","focus","getFocus","enable","x","parseFloat","getAttribute","y","_enabled","createElement","src","appendChild","startListening","setFocus","disable","stopListening","removeChild","addEventListener","startDragging","handleMove","passive","updateRetinaPositionFromFocus","removeEventListener","setAttribute","toString","getBoundingClientRect","width","height","IMG_STYLES","minHeight","minWidth","RESIZE_LISTENER_OBJECT_STYLES","border","opacity","zIndex","pointerEvents","debounceTime","updateOnWindowResize","updateOnContainerResize","containerPosition","FocusedImage","func","timeout","applyShift","imageW","naturalWidth","imageH","naturalHeight","containerW","containerH","hShift","vShift","wR","hR","maxHeight","calcShift","debounceApplyShift","args","clearTimeout","setTimeout","listening","window","object","contentDocument","defaultView","_this2","type","tabIndex","data","resizeListenerObject","conToImageRatio","containerSize","imageSize","focusSize","toMinus","containerCenter","Math","floor","focusFactor","scaledImage","focusOffset","remainder","containerRemainder"],"mappings":"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"}